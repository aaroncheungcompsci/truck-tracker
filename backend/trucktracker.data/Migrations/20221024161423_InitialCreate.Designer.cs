// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using trucktracker.data;

#nullable disable

namespace trucktracker.data.Migrations
{
    [DbContext(typeof(TruckTrackerContext))]
    [Migration("20221024161423_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("trucktracker.data.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("trucktracker.data.Entities.Station", b =>
                {
                    b.Property<string>("StationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Num_of_Allowed_Trucks")
                        .HasColumnType("int");

                    b.Property<int>("Num_of_Current_Trucks")
                        .HasColumnType("int");

                    b.HasKey("StationId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("trucktracker.data.Entities.Truck", b =>
                {
                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Days_in_Offline")
                        .HasColumnType("int");

                    b.HasKey("VIN");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("trucktracker.data.Entities.TruckHistory", b =>
                {
                    b.Property<Guid>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Loc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Move_In")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Move_Out")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("Total_Time")
                        .HasColumnType("bigint");

                    b.Property<string>("TruckVIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("HistoryId");

                    b.HasIndex("PersonId");

                    b.HasIndex("StationId");

                    b.HasIndex("TruckVIN");

                    b.ToTable("Truck_History");
                });

            modelBuilder.Entity("trucktracker.data.Entities.TruckHistory", b =>
                {
                    b.HasOne("trucktracker.data.Entities.Person", "Person")
                        .WithMany("TruckHistories")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("trucktracker.data.Entities.Station", "Station")
                        .WithMany("TruckHistories")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("trucktracker.data.Entities.Truck", "Truck")
                        .WithMany("TruckHistories")
                        .HasForeignKey("TruckVIN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Station");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("trucktracker.data.Entities.Person", b =>
                {
                    b.Navigation("TruckHistories");
                });

            modelBuilder.Entity("trucktracker.data.Entities.Station", b =>
                {
                    b.Navigation("TruckHistories");
                });

            modelBuilder.Entity("trucktracker.data.Entities.Truck", b =>
                {
                    b.Navigation("TruckHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
